"use strict";(self["webpackChunkplantilla"]=self["webpackChunkplantilla"]||[]).push([[443],{2589:function(e,a,n){n.r(a),n.d(a,{default:function(){return u}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"This is an about page",-1),t=[s];function l(e,a){return(0,o.wg)(),(0,o.iD)("div",r,t)}var i=n(3744);const c={},d=(0,i.Z)(c,[["render",l]]);var u=d},8757:function(e,a,n){n.r(a),n.d(a,{default:function(){return f}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Tipado",-1),t=(0,o._)("h2",null,"Debil vs Fuerte",-1),l=(0,o._)("p",null,"Se trata en la validacion del tipo al momento de comparar o hacer alguna operacion ejemplo para los lenguajes de tipado debil 1=='1' para esta comparacion el resultado seria verdadero ya que el valor es el mismo pero para el tipado fuerte serian diferentes ya que uno es numerico y el otro es un string por eso en los lenguajes con tipado debil existe el 1 === '1' que permite comparar el tipo del dato al momento de la comparacion.",-1),i=(0,o._)("h2",null,"Estatico vs dinamico",-1),c=(0,o._)("p",null,"Se trata de la capacidad de detectar el tipo del dato que posee una variable o constante en el tipado estatico se le indica que tipo de dato va a poseer, mientras en el tipado dinamico es el lenguaje que interpreta el valor que lleva la variable y con eso le da el tipo de dato que manejara la variable.",-1),d=[s,t,l,i,c];function u(e,a){return(0,o.wg)(),(0,o.iD)("div",r,d)}var p=n(3744);const m={},h=(0,p.Z)(m,[["render",u]]);var f=h},540:function(e,a,n){n.r(a),n.d(a,{default:function(){return u}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)("<h1>Niveles de Programacion</h1><h2>Nivel Maquina</h2><p>Se trata de escribir el programa directamente comprensible por el procesador, se usan diferentes lenguajes ensambladores y son programas que puede ser insuperables en terminos de rendimiento y de consumo de recursos.</p><h2>Bajo Nivel</h2><p>Son lenguajes que nos permite crear programas mas o menos complejos y nos permite tener un control de tareas de bajo nivel como asignacion y liberacion de memoria.</p><ul><li>C++</li></ul><h2>Alto Nivel</h2><p>El control de las tareas de bajo nivel las tiene de forma automatica normalmente usando un recolector de basura</p><ul><li>JAVA</li><li>Python</li></ul>",9),t=[s];function l(e,a){return(0,o.wg)(),(0,o.iD)("div",r,t)}var i=n(3744);const c={},d=(0,i.Z)(c,[["render",l]]);var u=d},4791:function(e,a,n){n.r(a),n.d(a,{default:function(){return u}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>Paradigmas de la programacion</h1><p>hacen referencias a los modelos que se usaron para crear un lenguaje y la estructura que se sigue para crear un programa atraves de estos.</p><h2>Imperativo y derivados</h2><p>Son programas lineales que usando instrucciones ordenadas llega a resolver problemas, este tipo de paradigma crearon tres estilos los cuales son los estructurados (permite la creacion de estructuras de control como if, while y for para evitar los saltos de linea con goto), los procedimentales (divide el programa en codigo mas peque√±o que se puede reutilizar) y los modulares (son trosos de codigo totalmente funcionales que pueden usarse independientemente y ser usados en otros desarrollos), algunos lenguajes imperativos son: COBOL, Algol, Basic y C</p><h2>Orientado a objetos (POO)</h2><p>hace referencia a que todo se puede interpretar como un objeto y por ende se puede llevar a la programacion teniendo presente sus atributos (propiedades) y sus metodos (actividades) este tipo de paradigma tiene dos variantes los que construyen el objeto atraves de clases o los que los crean a traves de prototipos, en el primer grupo tenemos lenguajes como java, c++ mientras en el segundo grupo tenemos Lua, Javascript.</p><p>la gran diferencia es que en el primer grupo es que permite <em class="enfasis">instanciacion</em> que puede permitir afinidad entre clases, mientras en el segundo no existe este concepto ya que los objetos son solo contenedores de metodos estaticos.</p><p>En este paradigma se tiene 4 principios</p><dl><dt>La encapsulacion</dt><dd>Lo que hace es separar la informacion del objeto, haciendo ocultas algunas de sus funciones o propiedades para que no sean accesibles desde el exterior.</dd><dt>la abstaccion</dt><dd>Es la creacion de metodos que permiten la interaccion con el objeto, esto permite la modificacion de las propiedades de forma controlada.</dd><dt>la herencia:</dt><dd>Este principio lo que hace es que un objeto pueda adquirir las propiedades y metodos de otra clases como su nombre lo indica se heredan estas caracteristicas</dd><dt>el polimorfirmo</dt><dd>Hace referencia al comportamiento que tiene cada objeto. un ejemplo seria como caminar dependiendo quien camina si un pato o un perro tiene su propia forma pero la funcion seria la misma caminar.</dd></dl><h2>Orientado a componentes (POC)</h2><p>Es un paradigma donde se estructura el codigo en bloques reutilizables, creando funciones genericar progresando en el mantenimiento de las aplicaciones y se concidera que el nivel de abstraccion es mas alto que el de los objetos.</p><h2>Orientada a eventos (POE)</h2><p>Hace referencia a centrarce en los eventos que puede tener un sistema. y estos eventos son determinados ya sea por el usuario o por el propio sistema y dependiendo de estos eventos el sistema tendra un comportamiento.</p><h2>Orientada a aspectos (POA)</h2><p>Es basada en crear modulos que dan solucion a una obligacion o aspecto haciendo la separaccion del codigo en aspectos y no en objetos. esto se puede interpretar como el aspecto de caminar partiendo de la programacion orientada a objetos tendriamos varias clases que implementan este metodo pero en la programacion orientada a aspectos tendriamos un aspecto que seria usada por las demas clases.</p><h2>Programacion Funcional (FP)</h2><p>Esta basada en utilizar funciones evitando asi datos mutables, en este paradigma las funciones son tratadas como variables, entradas o salida de datos o como parametros de otras funciones. </p><h2>Logico</h2><p>Este paradigma nos permite resolver problemas a nivel logico y el lenguaje usado para este paradigma es prolog. consiste en crear una serie de reglas aplicables a los datos mediante un motor de inferencia. </p><h2>Programacion por restricciones.</h2><p>donde las relaciones entre las variables son expresadas en terminos de restricciones(ecuaciones), lo que provoca que deben ser satisfechas para dar solucion al problema planteado. en otras palabra se programa lo que queremos y no como se hace. </p><h2>Programacion concurrente</h2><p>Es basado en la capacidad del hardware moderno permitiendo crear tareas silmultaneas o concurrentes. </p><h2>Programacion por contrato</h2><p>permite la programacion usando precondiciones y postcondiciones, que permiten incrementar la calidad del codigo implementando pruebas para asegurar de que el codigo base se comporta como se requiere. </p>',25),t=[s];function l(e,a){return(0,o.wg)(),(0,o.iD)("div",r,t)}var i=n(3744);const c={},d=(0,i.Z)(c,[["render",l]]);var u=d},2750:function(e,a,n){n.r(a),n.d(a,{default:function(){return x}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)("<h1>Introduccion</h1><ul><li>Fue creado por Guido van Rossum a comienzos de los 90</li><li>lenguaje de alto nivel con una gramatica sencilla, clara y muy legible</li><li>tipado dinamico y fuerte</li><li>orientado a objetos</li><li>codigo open Source</li><li>multiplataforma</li><li>interpretado</li><li>multiproposito</li><li>multiparadigma</li><li>multihilo</li><li>case sensitive</li></ul><h2>Estructura base</h2><p>python no tiene una estructura base se puede iniciar en cualquier editor de texto teniendo en cuenta que debe tener extension .py y el programa python para poder interpretarlo.</p><p>En una consola o terminal podemos ejecutar nuestro codigo de la siguiente forma.</p>",5),t=(0,o._)("code",{class:"python"},'py "Nombre_archivo.py"',-1),l=[t],i=(0,o._)("h2",null,"Variables, comentarios y Constantes",-1),c=(0,o._)("p",null,[(0,o.Uk)("En Phyton solo se tiene que dar un nombre a la variable que normalmente se usa el estilo lowercamelcase. por otro lado si se desea saber el tipo de dato de estas variables se usa "),(0,o._)("em",{class:"enfasis"},"type()")],-1),d=(0,o._)("p",null,"cuando escribes el nombre de una variable en mayuscula podemos suponer que es una constante. por buenas practicas",-1),u=(0,o._)("code",{class:"python"},'\'\'\'\r\nlas comillas simples permiten crear comentarios de varias lineas\r\ny el simbolo numeral permite crear comentarios de una linea\r\n\'\'\'\r\nnombre="ruben" #variable de tipo string\r\nedad=30 #variable de tipo numerico\r\ntexto="""cuando se quiere escribir un texto\r\nde multiples lineas en una variable\r\nse debe usar 3 veces comillas dobles.\r\n"""\r\nFIJO="mueres"\r\nprint(type(nombre))\r\nprint(type(edad))\r\nprint(type(texto))',-1),p=[u],m=(0,o.uE)('<h2>Tipos de datos primitivos en python</h2><p>En python existe cuatro tipos de datos primitivos: </p><ul><li>Numeros enteros <em class="enfasis">int()</em></li><li>Numeros de punto flotante <em class="enfasis">float()</em></li><li>Texto (cadenas de caracteres) <em class="enfasis">str()</em></li><li>Booleanos (True y False) <em class="enfasis">bool()</em> en python debe ser en mayuscula la primera para que tome el valor booleano</li></ul><h2>Entrada y salida en consola</h2><p>se tiene una entrada que ingresa el valor siempre como texto que es <em class="enfasis">input()</em> y una salida que es <em class="enfasis">print()</em> aunque este ultimo tiene varios formatos.</p>',5),h=(0,o._)("code",{class:"python"},'\r\nnombreVariable=input("Escribe tu nombre") #entrada\r\nprint("hola mundo") #escribe en consola hola mundo\r\n\r\n#escribe en consola hola mundo pero al finalizar no da enter sino lo que se especifique en end.\r\nprint("hola mundo",end="") \r\nprint(f"hola {nombreVariable}") #formatea el texto permitiendo el ingreso del valor de la variable\r\nprint(r"C:\\algun\\nombre") #escapa el carracte \\ para que no lo interprete como caracter especial.',-1),f=[h],b=(0,o.uE)('<h2>Conversion de datos</h2><p>Para pasar de un tipo a otro solo se debe usar la case del tipo de valor primitivo y este cambiara su tipo se debe recordar que la conversion sea logica ya que &quot;a&quot; no puede convertirse en un numero</p><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">comando</th><th scope="col">descripcion</th></tr></thead><tbody><tr><td scope="row">int(&quot;10&quot;)</td><td scope="row">Convertir el string numerico en numero</td></tr><tr><td scope="row">float(&quot;10.8&quot;)</td><td scope="row">Convertir el string numerico en numero flotante</td></tr><tr><td scope="row">str(1)</td><td scope="row">Convertir un valor numerico a string</td></tr><tr><td scope="row">bin(10)</td><td scope="row">Convierte un valor decimal a binario</td></tr><tr><td scope="row">hex(10)</td><td scope="row">Convierte un valor decimal a hexadecimal</td></tr><tr><td scope="row">int(&quot;0b1010&quot;,2)</td><td scope="row">Convierte un valor binario a decimal</td></tr><tr><td scope="row">int(&quot;0xa&quot;,16)</td><td scope="row">Convierte un valor hexadecimal a decimal</td></tr><tr><td scope="row">abs(-10)</td><td scope="row">muestra el valor absoluto de un numero</td></tr><tr><td scope="row">round(5.5)</td><td scope="row">redondea un numero a entero</td></tr><tr><td scope="row">round(15.565485484,2)</td><td scope="row">redondea un numero y le deja dos decimales</td></tr></tbody></table>',3),_=(0,o._)("code",{class:"python"},'\r\nnumero="5.4"\r\nint(numero)\r\nfloat(numero)\r\nstr(numero)\r\nbool(0) #bool convierte solo 0 y 1 a false a true',-1),g=[_],v=(0,o._)("h2",null,"Otros tipos numericos",-1),y=(0,o._)("ul",null,[(0,o._)("li",null,"Decimal"),(0,o._)("li",null,"Fraction"),(0,o._)("li",null,"Complejos usando j como la parte imaginaria: 3+4j")],-1);function w(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,l)),[[n]]),i,c,d,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,p)),[[n]]),m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]]),b,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,g)),[[n]]),v,y])}var q=n(3744);const D={},j=(0,q.Z)(D,[["render",w]]);var x=j},1378:function(e,a,n){n.r(a),n.d(a,{default:function(){return f}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>Operadores en python</h1><h2>Operadores Aritmeticos</h2><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">operador</th><th scope="col">simbolo</th></tr></thead><tbody><tr><td scope="row">suma</td><td scope="row">+</td></tr><tr><td scope="row">resta</td><td scope="row">-</td></tr><tr><td scope="row">multiplicacion</td><td scope="row">*</td></tr><tr><td scope="row">division</td><td scope="row">/</td></tr><tr><td scope="row">modulo</td><td scope="row">%</td></tr><tr><td scope="row">Exponete</td><td scope="row">**</td></tr><tr><td scope="row">Division entera</td><td scope="row">//</td></tr></tbody></table><h2>Operadores de Comparacion</h2><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">operador</th><th scope="col">simbolo</th></tr></thead><tbody><tr><td scope="row">Igual que</td><td scope="row">==</td></tr><tr><td scope="row">Diferente que</td><td scope="row">!=</td></tr><tr><td scope="row">Mayor que</td><td scope="row"> &gt; </td></tr><tr><td scope="row">Menor que</td><td scope="row"> &lt; </td></tr><tr><td scope="row">Mayor o igual que</td><td scope="row"> &gt;= </td></tr><tr><td scope="row">Menor o igual que</td><td scope="row"> &lt;= </td></tr></tbody></table><h2>Operadores Logicos</h2><ul><li>AND</li><li>OR</li><li>NOT</li></ul><h2>Operadores de asignacion</h2><p>estos operadores nos permite usar el valor de la variable y operarlo por lo que queremos es lo mismo que escribir <code>variable=variable+1</code> que <code>variable+=1</code> el unico que no opera el valor de la variable es el de <em class="enfasis">igualacion</em>. </p><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">operador</th><th scope="col">simbolo</th></tr></thead><tbody><tr><td scope="row">igual</td><td scope="row">=</td></tr><tr><td scope="row">preincremento</td><td scope="row">+=</td></tr><tr><td scope="row">decremento</td><td scope="row">-=</td></tr><tr><td scope="row"></td><td scope="row">*=</td></tr><tr><td scope="row"></td><td scope="row">/=</td></tr><tr><td scope="row"></td><td scope="row">%=</td></tr><tr><td scope="row"></td><td scope="row">**=</td></tr><tr><td scope="row"></td><td scope="row">//=</td></tr></tbody></table>',10),t=(0,o._)("code",{class:"python"},"variable=3\r\nvariable+=1\r\nvariable/=2",-1),l=[t],i=(0,o._)("p",null,"En python existe la asignacion multiple en una linea se agrupan los valores que se les asigna un valor al lado izquierdo del igual y los valores al lado derecho separados por comas. en este caso se le asigna el valor de a tanto a b como a c",-1),c=(0,o._)("code",{class:"python"},"a=3\r\nb,c=a,d",-1),d=[c];function u(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,l)),[[n]]),i,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,d)),[[n]])])}var p=n(3744);const m={},h=(0,p.Z)(m,[["render",u]]);var f=h},3649:function(e,a,n){n.r(a),n.d(a,{default:function(){return _}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Condicionales en python",-1),t=(0,o._)("p",null,"En python solo se maneja un tipo de condicional que es if su sintasis es la siguiente.",-1),l=(0,o._)("code",{class:"python"},'\r\nedad=int(input("escribe tu edad: "))\r\nif(edad > 17):\r\n    print("tienes mas de 17 a√±os")\r\nelif(edad < 50):\r\n    pass\r\nelse:\r\n    pass',-1),i=[l],c=(0,o._)("p",null,[(0,o.Uk)("la palabra clave "),(0,o._)("em",{class:"enfasis"},"pass"),(0,o.Uk)(" indica que en otro momento programaras lo que falta en ese lado pero permite que funcione el programa")],-1),d=(0,o._)("p",null,"hay condicionales anidadas donde se evaluan diferentes expresiones es igual a tener un and y se evalua de izquierda a derecha",-1),u=(0,o._)("code",{class:"python"},'\r\nedad=int(input("escribe tu edad: "))\r\nif(0 < edad < 18):\r\n    print("eres menor de edad")\r\nelif(edad > 18):\r\n    print("eres mayor de edad")\r\nelse:\r\n    print("no existe edades negativas")\r\n        ',-1),p=[u];function m(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,d,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,p)),[[n]])])}var h=n(3744);const f={},b=(0,h.Z)(f,[["render",m]]);var _=b},626:function(e,a,n){n.r(a),n.d(a,{default:function(){return w}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Funciones en python",-1),t=(0,o._)("p",null,[(0,o.Uk)("Las funciones en python se declara con la palabra reservada "),(0,o._)("em",{class:"enfasis"},"def"),(0,o.Uk)(" y las lineas de c√≥digo que hacen parte de esta funcion deben estar indexadas.")],-1),l=(0,o._)("p",null,[(0,o.Uk)("cuando se quiere devolver un valor se usa la palabra clave "),(0,o._)("em",{class:"enfasis"},"return"),(0,o.Uk)(" se debe recordar que python pasa los valores por referencia")],-1),i=(0,o._)("h2",null,"funcion sin parametros",-1),c=(0,o._)("code",{class:"python"},"\r\n#declaracion de la funcion\r\ndef nombrefuncion():\r\n    pass\r\n#invocacion de la funcion\r\nnombrefuncion()",-1),d=[c],u=(0,o._)("h2",null,"funcion con parametros",-1),p=(0,o._)("code",{class:"python"},'\r\n#declaracion de la funcion\r\ndef nombrefuncion(parametro):\r\n    print(parametro)\r\n#invocacion de la funcion\r\nnombrefuncion("hola mundo")\r\n        ',-1),m=[p],h=(0,o._)("h2",null,"funcion con return",-1),f=(0,o._)("code",{class:"python"},"\r\n#declaracion de la funcion\r\ndef nombrefuncion(a,b):\r\n    suma=a+b\r\n    return suma\r\n#invocacion de la funcion\r\nnombrefuncion(5,8)\r\n        ",-1),b=[f];function _(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,l,i,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,d)),[[n]]),u,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,m)),[[n]]),h,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,b)),[[n]])])}var g=n(3744);const v={},y=(0,g.Z)(v,[["render",_]]);var w=y},4851:function(e,a,n){n.r(a),n.d(a,{default:function(){return j}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>Funciones con String</h1><p>dentro de la clase str tenemos algunos metodos o funciones que nos permite interactuar con textos las cuales algunas son:</p><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">M√©todo</th><th scope="col">descripcion</th></tr></thead><tbody><tr><td scope="row">lower()</td><td scope="row">transforma el texto en minuscula</td></tr><tr><td scope="row">upper()</td><td scope="row">transforma el texto en mayuscula</td></tr><tr><td scope="row">capitalize()</td><td scope="row">transforma la primera letra en mayuscula</td></tr><tr><td scope="row">count(&quot;c&quot;)</td><td scope="row">cuenta cuantas veces aparece un caracter o cadena en el string</td></tr><tr><td scope="row">find(&quot;c&quot;)</td><td scope="row">busca un caracter o cadena dentro del string y devuelve su ubicacion si no encuentra devuelve -1</td></tr><tr><td scope="row">isdigit()</td><td scope="row">devuelve true o false para comprobar si es un numero</td></tr><tr><td scope="row">isalnum()</td><td>devuelve true o false para comprobar si es un alfanumerico</td></tr><tr><td scope="row">isalpha()</td><td scope="row">devuelve true o false para comprobar si es un alfabetico</td></tr><tr><td scope="row">split()</td><td scope="row">separa el string por espacios</td></tr><tr><td scope="row">split(&quot;,&quot;)</td><td scope="row">separa el string por el caracter pasado</td></tr><tr><td scope="row">strip()</td><td scope="row">quita los espacios tanto al inicio como al fin</td></tr><tr><td scope="row">replace(&quot;buscado&quot;,&quot;remplasa&quot;)</td><td scope="row">quita los espacios tanto al inicio como al fin</td></tr><tr><td scope="row">rfind()</td><td scope="row">busca un caracter desde el final al inicio devuelve la ultima posicion que aparece el caracter devuelve -1 si no encuentra nada</td></tr></tbody></table>',3),t=(0,o._)("code",{class:"python"},'\r\ntexto="ruben es una persona que le gusta caminar"\r\ntexto.upper()',-1),l=[t],i=(0,o._)("h2",null,"Texto multilinea",-1),c=(0,o._)("p",null,[(0,o.Uk)("En algunos casos queremos escribir mas de una linea para esto podemos usar "),(0,o._)("em",{class:"enfasis"},'"""....."""'),(0,o.Uk)(" o "),(0,o._)("em",{class:"enfasis"},"'''.....'''"),(0,o.Uk)(" encerrando el string esto nos permite escribir un strin en varias lineas, los saltos de linea se incluyen automaticamente para poder prevenir este salto se usa "),(0,o._)("em",{class:"enfasis"},"\\"),(0,o.Uk)(".")],-1),d=(0,o._)("code",{class:"python"},'print("""\\\r\nUso: algo [Opciones]\r\n    -h              Muestra el hostname en Uso\r\n    -H              Nombre del host al cual conectarse\r\n""")',-1),u=[d],p=(0,o._)("h2",null,"Extraer un caracter o recorrer caracter a caracter",-1),m=(0,o._)("p",null,[(0,o.Uk)("tambien se puede recorrer letra a letra del string usando "),(0,o._)("em",null,"[posicion]"),(0,o.Uk)(" ya que el string se puede tratar como un array de caracteres")],-1),h=(0,o._)("code",{class:"python"},'\r\ntexto="ruben es una persona que le gusta caminar"\r\nlen(texto)#cantidad de caracteres que tiene el String\r\ntexto[len(texto)-1] #el ultimo caracter de la cadena\r\n        ',-1),f=[h],b=(0,o._)("h2",null,"SubString o Slices",-1),_=(0,o._)("p",null,[(0,o.Uk)("se puede obtener partes del string usando los Slices(rebanadas) para esto se usa los corchetes "),(0,o._)("em",null,'["posicion inicio": "posicion final": "saltos"] un elemento no colocada se entiende que es el valor por defecto')],-1),g=(0,o._)("code",{class:"python"},'\r\ntexto="ruben es una persona que le gusta caminar"\r\ntexto[5] # trae el caracter en la posicion 5\r\ntexto[:5] # desde el primer elemento a la posicion 5\r\ntexto[13:] # desde la posicion 13 hasta el final\r\ntexto[13:20] #desde la posicion 13 hasta la 20\r\n\r\ntexto[0::2] #extrae el texto de dos en dos desde el inicio al final tambien se puede escribir texto[::2]\r\ntexto[::-1] #con numeros negativos invierte el recorido va desde el final al inicio en este caso invierte el texto',-1),v=[g];function y(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,l)),[[n]]),i,c,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,u)),[[n]]),p,m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]]),b,_,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,v)),[[n]])])}var w=n(3744);const q={},D=(0,w.Z)(q,[["render",y]]);var j=D},1948:function(e,a,n){n.r(a),n.d(a,{default:function(){return y}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Bucles en python",-1),t=(0,o._)("h2",null,"Bucle while",-1),l=(0,o._)("code",{class:"python"},'LIMITE=5\r\ncontador=0\r\nwhile contador < LIMITE:\r\n    print("hola mundo")\r\n    contador+=1',-1),i=[l],c=(0,o.uE)('<h2>Bucle For</h2><p>En algunos casos queremos crear listas de datos para recorrer y estas listas se suelen recorrer usando el bucle for. para esto usamos la funcion <em class="enfasis">range()</em> que crea estas listas</p><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">tipo</th><th scope="col">descripcion</th></tr></thead><tbody><tr><td scope="row">range(5)</td><td scope="row">crea una lista de 0 al 4</td></tr><tr><td scope="row">range(5,10)</td><td scope="row">crea una lista del 5 al 10</td></tr><tr><td scope="row">range(5,45,5)</td><td scope="row">crea una lista del 5 al 45 de 5 en 5</td></tr></tbody></table>',3),d=(0,o._)("code",{class:"python"},'for i in range(5):\r\n    pass\r\n\r\nfor i in range(len("este es un texto")):\r\n    pass',-1),u=[d],p=(0,o._)("h2",null,"continue y break",-1),m=(0,o._)("p",null,"son dos palabras claves una salta a la siguiente iteracion y el otro sale del ciclo.",-1),h=(0,o._)("code",{class:"python"},"for i in range(10000):\r\n    if i % 2 != 0:\r\n        continue\r\n    \r\n    if i==5000:\r\n        break\r\n    \r\n    print(i)",-1),f=[h];function b(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,u)),[[n]]),p,m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]])])}var _=n(3744);const g={},v=(0,_.Z)(g,[["render",b]]);var y=v},7395:function(e,a,n){n.r(a),n.d(a,{default:function(){return C}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Listas en python",-1),t=(0,o._)("p",null,"Es una estructura de datos que nos permite almacenar multiples datos. la forma en que se crean en python es de la siguiente manera:",-1),l=(0,o._)("code",{class:"python"},"nombreLista=[1,2,3,4,5,6]\r\nnombreLista=[]\r\n        ",-1),i=[l],c=(0,o._)("h2",null,"Slider",-1),d=(0,o._)("p",null,"igual que con los textos podemos usar los sleder pero de vez de tratar con caracteres trata con valores",-1),u=(0,o._)("code",{class:"python"},"numeros=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\r\n\r\nnumeros[5] # trae el elemento en la posicion 5\r\nnumeros[:5] # desde el primer elemento al elemento 5\r\nnumeros[13:] # desde el elemento 13 hasta el elemento final\r\nnumeros[13:20] #desde el elemento 13 hasta la 20\r\n\r\nnumeros[0::2] #extrae los elementos de dos en dos[::2]\r\nnumeros[::-1] #con numeros negativos invierte el recorrido va desde el elemento final hasta el primer elemento",-1),p=[u],m=(0,o.uE)('<h2>Metodos de las listas</h2><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">metodo</th><th scope="col">descripcion</th></tr></thead><tbody><tr><td scope="row">append(elemento)</td><td scope="row">agrega un elemento al final de la lista</td></tr><tr><td scope="row">insert(posicion,elemento)</td><td scope="row">agrega un elemento a la lista en una posicion determinada</td></tr><tr><td scope="row">extend([elemento,elemento])</td><td scope="row">agrega una lista a otra lista o agrega multiples elementos</td></tr><tr><td scope="row">index(elemento)</td><td scope="row">busca el primer elemento que sea igual al elemento pasado y trae su posicion</td></tr><tr><td scope="row">elemento in lista</td><td scope="row">es la forma en que se pregunta si existe un elemento buscado en una lista dada devuelve true o false</td></tr><tr><td scope="row">remove(elemento)</td><td scope="row">elimina el primer elemento que se parezca al que se pasa</td></tr><tr><td scope="row">pop()</td><td scope="row">elimina el ultimo elemento de la lista</td></tr><tr><td scope="row">pop(5)</td><td scope="row">elimina el elemento en la posicion 5</td></tr><tr><td scope="row">list(tupla)</td><td scope="row">convertir una tupla a lista</td></tr></tbody></table>',2),h=(0,o._)("code",{class:"python"},'numeros=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\r\nnumeros.append(21)\r\nnumeros.extend([22,23,24,25,26,27,28])\r\nif 30 in numeros:\r\n    print("el numero 30 existe en la lista")',-1),f=[h],b=(0,o._)("h2",null,"Operaciones con listas",-1),_=(0,o._)("p",null,[(0,o.Uk)("Se pueden usar dos operadores usando listas el "),(0,o._)("em",null,"+"),(0,o.Uk)(" que concatenara las listas y "),(0,o._)("em",null,"*"),(0,o.Uk)(" que multiplicara la lista la cantidad de veces que necesitemos")],-1),g=(0,o._)("code",{class:"python"},"numeros1=[1,2,3,4,5]\r\nnumeros2=[6,7,8,9,10]\r\nnumerostotal=numeros1+numeros2 #concatena la lista\r\nnumerostotal*3 #concatena 3 veces la lista multiplicada",-1),v=[g],y=(0,o._)("h2",null,"list comprehensions",-1),w=(0,o._)("p",null,"nos permite crear listas de una forma abreviada usando un ciclo for y el valor deseado.",-1),q=(0,o._)("code",{class:"python"},"list_comprehensions=[i**2 for i in range(1,101) if i % 3 !=0]",-1),D=[q],j=(0,o.uE)('<p>este codigo se compone de 3 partes</p><ul><li><em>i**2</em>: valor a colocar en la lista</li><li><em>for i in range(1,101)</em>: para los valores de 1 a 100 el (ciclo for)</li><li><em>if i %3 !=0</em> condicion a cumplir para cada elemento, solo se pondran en la lista los elementos que cumplan la condicion y esta parte es (opcional) </li></ul><div class="importante"><p><em>Nota:</em> se debe recordar que cuando se iguala una lista con otra esta queda apuntando a su direccion NO hace una copia de esta. como sucede en las variables.</p></div>',3);function x(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,d,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,p)),[[n]]),m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]]),b,_,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,v)),[[n]]),y,w,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,D)),[[n]]),j])}var k=n(3744);const U={},E=(0,k.Z)(U,[["render",x]]);var C=E},3094:function(e,a,n){n.r(a),n.d(a,{default:function(){return E}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Tuplas en python",-1),t=(0,o._)("p",null,"Son estructuras de datos inmutables que se ejecutan mas rapido que las listas ya que no se puede agregar ni eliminar valores de estas tuplas.",-1),l=(0,o._)("code",{class:"python"},"nombreTupla=(1,2,3,4,5,6)",-1),i=[l],c=(0,o._)("h2",null,"Slider",-1),d=(0,o._)("p",null,"igual que con los textos podemos usar los sleder pero de vez de tratar con caracteres trata con valores",-1),u=(0,o._)("code",{class:"python"},"numeros=(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\r\n            \r\nnumeros[5] # trae el elemento en la posicion 5\r\nnumeros[:5] # desde el primer elemento al elemento 5\r\nnumeros[13:] # desde el elemento 13 hasta el elemento final\r\nnumeros[13:20] #desde el elemento 13 hasta la 20\r\n\r\nnumeros[0::2] #extrae los elementos de dos en dos[::2]\r\nnumeros[::-1] #con numeros negativos invierte el recorrido va desde el elemento final hasta el primer elemento",-1),p=[u],m=(0,o.uE)('<h2>Metodos de las tuplas</h2><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">metodo</th><th scope="col">descripcion</th></tr></thead><tbody><tr><td scope="row">elemento in tupla</td><td scope="row">valida la existencia de un elemento en la tupla</td></tr><tr><td scope="row">count(elemento)</td><td scope="row">trae la cantidad de veces que existe el elemento en la tupla</td></tr><tr><td scope="row">len(tupla)</td><td scope="row">saber el tama√±o de la tupla</td></tr><tr><td scope="row">tuple(NombreLista)</td><td scope="row">convertir una lista a tupla</td></tr></tbody></table>',2),h=(0,o._)("code",{class:"python"},'numeros=(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\r\nif 10 in numeros:\r\n    print("el numero 10 existe en la tupla")\r\nnumeros.count(5)',-1),f=[h],b=(0,o._)("h2",null,"Operaciones con tuplas",-1),_=(0,o._)("p",null,[(0,o.Uk)("Se pueden usar dos operadores usando tuplas el "),(0,o._)("em",null,"+"),(0,o.Uk)(" que concatenara las tupla y "),(0,o._)("em",null,"*"),(0,o.Uk)(" que multiplicara la tupla la cantidad de veces que necesitemos")],-1),g=(0,o._)("code",{class:"python"},"numeros1=[1,2,3,4,5]\r\nnumeros2=[6,7,8,9,10]\r\nnumerostotal=numeros1+numeros2 #concatena la tupla\r\nnumerostotal*3 #concatena 3 veces la tupla multiplicada",-1),v=[g],y=(0,o._)("h2",null,"Desenpaquetado",-1),w=(0,o._)("p",null,"para lograr pasar los valores de una tupla a variables se debe crear la misma cantidad de variables que elementos de la tupla",-1),q=(0,o._)("code",{class:"python"},'tupla=("ruben",30)\r\nnombre,edad=tupla',-1),D=[q];function j(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,d,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,p)),[[n]]),m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]]),b,_,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,v)),[[n]]),y,w,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,D)),[[n]])])}var x=n(3744);const k={},U=(0,x.Z)(k,[["render",j]]);var E=U},1243:function(e,a,n){n.r(a),n.d(a,{default:function(){return w}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Diccionarios en python",-1),t=(0,o._)("p",null,"Son estructuras de datos que permite guardar dos valores el primero es la llave y la segunda el valor.",-1),l=(0,o._)("code",{class:"python"},'diccionario={\r\n    1:"uno",\r\n    2:"dos",\r\n    3:"tres"\r\n}',-1),i=[l],c=(0,o.uE)('<h2>Metodos de los diccionarios</h2><table class="table table-dark table-striped table-hover"><thead><tr><th scope="col">metodo</th><th scope="col">descripcion</th></tr></thead><tbody><tr><td scope="row">nombreDiccionario[key]=valor</td><td scope="row">asigna o crea el valor dado en el diccionario</td></tr><tr><td scope="row">del nombreDiccionario[key]</td><td scope="row">elimina la llave y el valor del diccionario</td></tr><tr><td scope="row">nombreDiccionario.keys()</td><td scope="row">devuelve todas las llaves del diccionario</td></tr><tr><td scope="row">nombreDiccionario.values()</td><td scope="row">devuelve todos los valores del diccionario</td></tr><tr><td scope="row">nombreDiccionario.items()</td><td scope="row">devuelve los valores llave valor</td></tr><tr><td scope="row">len(nombreDiccionario)</td><td scope="row">devuelve el tama√±o del diccionario</td></tr></tbody></table>',2),d=(0,o._)("code",{class:"python"},'\r\ndiccionario={1:"uno",2:"dos",3:"tres"}\r\nfor key,value in diccionario.items():\r\n    print(f"la llave es {key} y su valor es {value}")',-1),u=[d],p=(0,o._)("h2",null,"dictionary comprehensions",-1),m=(0,o._)("code",{class:"python"},"diccionario={i: i**3 for i in range(1,101) if i%3!=0}",-1),h=[m],f=(0,o._)("p",null,"igual que en la listas se componen de tres partes",-1),b=(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("em",null,"i:i**3"),(0,o.Uk)(": en la parte de valor se debe colocar la llave y el valor a colocar. ya que son necesarios en la cracion de diccionarios")]),(0,o._)("li",null,[(0,o._)("em",null,"for i in range(1,101)"),(0,o.Uk)(": para los valores de 1 a 100 el (ciclo for)")]),(0,o._)("li",null,[(0,o._)("em",null,"if i %3 !=0"),(0,o.Uk)(" condicion a cumplir para cada elemento, solo se pondran llave valor cuando se cumplan la condicion y esta parte es (opcional) ")])],-1);function _(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,u)),[[n]]),p,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,h)),[[n]]),f,b])}var g=n(3744);const v={},y=(0,g.Z)(v,[["render",_]]);var w=y},3759:function(e,a,n){n.r(a),n.d(a,{default:function(){return u}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>Zen de python</h1><h2>Beautiful is better than ugly</h2><p><em class="enfasis">Bello es mejor que feo: </em>Python es esteticamente superior a cualquier otro lenguaje de programacion. Al momento de escribir codigo, es mejor que sea de manera limpia y estetica.</p><h2>Explicit is better than implicit</h2><p><em class="enfasis">Explicito es mejor que implicito </em>hacer mas facil que las otras personas entiendad el codigo.</p><h2>Simple is better than complex</h2><p><em class="enfasis">Simple es mejor que complejo </em> es mejor tener una implementacion simple, que ocupe pocas lineas de codigo y sea entendible, a que sea una larga y complicada</p><h2>Complex is better than complicated</h2><p><em class="enfasis">Complejo es mejor que complicado </em>Si tenemos que extendernos en la implementacion y hacerla mas compleja para que el codigo si se entienda, esto es mejor que hacerlo simple y mal.</p><h2>Flat is better than nested</h2><p><em class="enfasis">plano es mejor que anidado </em> el anidamiento es cuando tenemos un bloque de codigo dentro de otro bloque de codigo (dependiendo de este). esto se nota en python por la identacion, nos quedarian estos bloques muy corridos a la derecha es mejor evitar el anidamiento y hacer las cosas de manera plana</p><h2>Sparse is better than dense.</h2><p><em class="enfasis">Espaciado es mejor que denso </em> por la identacion de python este principio se nos hace imposible de esquivar. el codigo inevitablemente es espaciado.</p><h2>Readability counts.</h2><p><em class="enfasis">La legibilidad es importante</em> es importante que otros programadores puedan entender lo que estamos escribiendo. esto hace mas faciles las cosas cuando trabajemos con otros en los proyectos</p><h2>Special cases aren&#39;t special enough to break the rules Although practicality beats purity</h2><p><em class="enfasis">los casos especiales no son lo suficientemente especiales como para romper las reglas (sin embargo, la practicidad le gana a la pureza</em> siempre que podamos respetar estas reglas que nos plantea python, es mejor asi. sin embargo, si por el hecho de hacer un codigo muy puro o muy pythonista este pierde legibilidad, es mejor ser mas practico y rompler o salteanos algunas de estas reglas para que el codigo sea mas eficiente. por lo tanto, llegado el momento debemos decidir si es mejor hacer las cosas de manera pura o practica.</p><h2>Errors should never pass silently Unless Explicitly silenced</h2><p><em class="enfasis">Los errores nunca deben pasar silenciosamente(a menos que se silencien explicitamente) </em> manejar los errores es fundamental. cada error nos dice algo y hay que prestarle atencion. a menos que sea capaz de silenciar un error explicitamente, aunque para esto hay que tener criterio.</p><h2>In the face of ambiguity, refuse the temptation to guess.</h2><p><em class="enfasis">Frente a la ambiguedad, evitar la tentacion de adivinar. </em> Nuestro codigo deberia solamente tener una interpretacion. si en un contexto significa algo, en otro otra cosa, es mejor que lo revisemos y busquemos una solucion.</p><h2>There should be one-- and preferably only one -- obvious way to do it (Although that way may not be obvious at first unless you&#39;re Dutch.)</h2><p><em class="enfasis">Deberia haber una y preferiblemente una sola manera obvia de hacerlo. (a pesar de que esa manera no sea obvia a menos que seas holandes</em> esto hace referencia al creador de python &quot;guido van rossum&quot;, que de manera muy inteligente encontraba las soluciones precisas a los problemas y deberiamos imitarlo.</p><h2>Now is better than never.</h2><p><em class="enfasis">Ahora es mejor que nunca </em>Es mejor desarrollar nuestra solucion cuanto antes, no dejarlo para ma√±ana o para mas adelante</p><h2>Although never is often better than &quot;right&quot; now.</h2><p><em class="enfasis">A pesar de que nunca es muchas veces mejor que ahora mismo</em> si por hacer las cosas ya y tenemos poco tiempo, si es mejor dejarlo para despues y no hacerlo apurado y mal</p><h2>If The implementation is hard to explain. it&#39;s a bad idea, If the implementation is easy to explain. It may be a good idea.</h2><p><em class="enfasis">Si la implementacion es dificil de explicar, es una mala idea. y si es facil de explicar, es una buena idea</em> si somos capaces de explicar nuestra implementacion a otros desarrolladores paso a paso, es una buena idea. en cambio si no podemos hacerlo, significa que ni nosotros entendemos la implementacion y deberiamos repensar nuestra forma de encarar la solucion.</p><h2>Namespaces are one honking great idea -- let&#39;s do more of those!</h2><p><em class="enfasis">los espacios de nombres son una gran idea ¬°Tengamos mas de esos!</em> es el nombre que se ha indicado luego de la palabra import, es decir la ruta(namespace) del modulo.</p>',31),t=[s];function l(e,a){return(0,o.wg)(),(0,o.iD)("div",r,t)}var i=n(3744);const c={},d=(0,i.Z)(c,[["render",l]]);var u=d},9517:function(e,a,n){n.r(a),n.d(a,{default:function(){return x}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Ambiente virtual python",-1),t=(0,o._)("p",null,"se usa para tener separado los modulos de cada proyecto que usan python esto por si cuando hay una actualizacion de python. no afecte el codigo de los demas proyectos. para esto se crea la nueva carpeta del proyecto. y una vez se ingresa a esta carpeta se ejecuta en terminal el siguiente comando.",-1),l=(0,o._)("code",{class:"python"},"py -m venv venv",-1),i=[l],c=(0,o._)("p",null,[(0,o.Uk)("el primer "),(0,o._)("em",{class:"enfasis"},"venv"),(0,o.Uk)(" le indica a python que cree un ambiente virtual (virtual enviroment) y el segundo es el nombre de la carpeta donde se creara el ambiente por convencion es venv o env")],-1),d=(0,o._)("p",null,"una vez que se crea el ambiente se debe activar para esto se debe ejecutar el siguiente comando",-1),u=(0,o._)("h2",null,"windows",-1),p=(0,o._)("code",{class:"python"},".\\venv\\Scripts\\activate",-1),m=[p],h=(0,o._)("h2",null,"linux o mac",-1),f=(0,o._)("code",{class:"python"},"source venv/bin/activate",-1),b=[f],_=(0,o._)("p",null,"para desactivar el ambiente se usa el siguiente comando",-1),g=(0,o._)("code",{class:"python"},"deactivate",-1),v=[g],y=(0,o._)("p",null,[(0,o.Uk)("otra forma de crear un ambiente virtual es usando "),(0,o._)("em",{class:"enfasis"},"pyvenv"),(0,o.Uk)(" o "),(0,o._)("em",{class:"enfasis"},"virtualenv")],-1);function w(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,d,u,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,m)),[[n]]),h,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,b)),[[n]]),_,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,v)),[[n]]),y])}var q=n(3744);const D={},j=(0,q.Z)(D,[["render",w]]);var x=j},8087:function(e,a,n){n.r(a),n.d(a,{default:function(){return $}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>Instalacion de Dependencias</h1><h2>PIP</h2><p>El instalador de dependencias en python es <em><abbr title="Package Installer for Python">pip</abbr></em>. algunos modulos que podria ser interesantes son los siguientes</p><ul><li>Requests</li><li>BeautifulSoup4</li><li>Pandas</li><li>Numpy</li><li>Pytest</li></ul>',4),t={class:"table table-dark table-striped table-hover"},l=(0,o._)("thead",null,[(0,o._)("tr",null,[(0,o._)("th",{scope:"col"},"Comando"),(0,o._)("th",{scope:"col"},"Descripcion")])],-1),i={scope:"row"},c=(0,o._)("code",{class:"python"},"pip search xml",-1),d=[c],u=(0,o._)("td",{scope:"row"},"Para buscar un modulo a ver como se llama",-1),p={scope:"row"},m=(0,o._)("code",{class:"python"},"pip freeze",-1),h=[m],f=(0,o._)("td",{scope:"row"},"para poder ver que modulos tenemos",-1),b={scope:"row"},_=(0,o._)("code",{class:"python"},"pip install pandas",-1),g=[_],v=(0,o._)("td",{scope:"row"},"para poder instalar un modulo",-1),y={scope:"row"},w=(0,o._)("code",{class:"python"},"pip install -Iv redis==2.10.5",-1),q=[w],D=(0,o._)("td",{scope:"row"},"para instalar una version especifica",-1),j={scope:"row"},x=(0,o._)("code",{class:"python"},"pip install -U redis==2.10.5",-1),k=[x],U=(0,o._)("td",{scope:"row"},"actualizar la libreria a una version concreta",-1),E={scope:"row"},C=(0,o._)("code",{class:"python"},"pip install -U redis",-1),z=[C],P=(0,o._)("td",{scope:"row"},"instalar a la ultima version",-1),S={scope:"row"},A=(0,o._)("code",{class:"python"},"pip uninstall redis",-1),T=[A],Z=(0,o._)("td",{scope:"row"},"desinstala la libreria",-1),N={scope:"row"},O=(0,o._)("code",{class:"python"},"pip show redis",-1),F=[O],Q=(0,o._)("td",{scope:"row"},"muestra informacion de la libreria",-1),L=(0,o._)("p",null,"para compartir el proyecto y que tenga los modulos necesarios para poder funcionar correctamente se debe usar un comando que creara el archivo de modulos y un comando que instalara esos modulos.",-1),M=(0,o._)("h3",null,"comando para crear el archivo de modulos",-1),I=(0,o._)("code",{class:"python"},"pip freeze > requirements.txt",-1),H=[I],B=(0,o._)("h3",null,"comando para instalar los modulos",-1),R=(0,o._)("code",{class:"python"},"pip install -r requirements.txt",-1),V=[R],J=(0,o._)("h2",null,"Anacanda",-1),G=(0,o._)("p",null,"es un software de manegador de dependencias grafico usado normalmente para ciencia de datos. nos permite crear entornos virtuales, instalar modulos aunque el mas usado es pip",-1);function W(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,(0,o._)("table",t,[l,(0,o._)("tbody",null,[(0,o._)("tr",null,[(0,o._)("td",i,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,d)),[[n]])]),u]),(0,o._)("tr",null,[(0,o._)("td",p,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,h)),[[n]])]),f]),(0,o._)("tr",null,[(0,o._)("td",b,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,g)),[[n]])]),v]),(0,o._)("tr",null,[(0,o._)("td",y,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,q)),[[n]])]),D]),(0,o._)("tr",null,[(0,o._)("td",j,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,k)),[[n]])]),U]),(0,o._)("tr",null,[(0,o._)("td",E,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,z)),[[n]])]),P]),(0,o._)("tr",null,[(0,o._)("td",S,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,T)),[[n]])]),Z]),(0,o._)("tr",null,[(0,o._)("td",N,[(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,F)),[[n]])]),Q])])]),L,M,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,H)),[[n]]),B,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,V)),[[n]]),J,G])}var K=n(3744);const X={},Y=(0,K.Z)(X,[["render",W]]);var $=Y},5721:function(e,a,n){n.r(a),n.d(a,{default:function(){return f}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>Funciones lambda o anonimas en python</h1><p>las funciones lambda tambien llamadas <em class="enfasis">on the go</em>, <em class="enfasis">on demand</em>, <em class="enfasis">online</em> o <em class="enfasis">anonimas.</em> son funciones cortas que se guardan en una variable que facilita la creacion de estas ya que se divide en tres partes. </p><ul><li><em>palindrome</em>: nombre de la funcion es la variable a usar cuando se quiere usar la funcion.</li><li><em>lambda palabra:</em> son los parametros que resibe la funcion en este caso solo va a ser palabra pero si se quiere mas parametros se separan por comas y al finalizar se coloca los dos puntos.</li><li><em>palabra==palabra[::-1]</em>: el valor a retornar en este caso true o false </li></ul>',3),t=(0,o._)("code",{class:"python"},'#creacion funcion lambda\r\npalindrome= lambda palabra:palabra==palabra[::-1]\r\n\r\n#invocando la funcion\r\npalindrome("ruben")',-1),l=[t],i=(0,o._)("p",null,"la siguiente funcion es un lambda sin parametros. aunque no tiene sentido usarlas no he encontrado el caso en que se usen sin parametros.",-1),c=(0,o._)("code",{class:"python"},'#creacion funcion lambda\r\nmiNombre= lambda:"ruben"\r\n\r\n#invocando la funcion\r\nprint(miNombre())',-1),d=[c];function u(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,l)),[[n]]),i,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,d)),[[n]])])}var p=n(3744);const m={},h=(0,p.Z)(m,[["render",u]]);var f=h},736:function(e,a,n){n.r(a),n.d(a,{default:function(){return j}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Funciones de orden superior en python",-1),t=(0,o._)("p",null,[(0,o.Uk)("las funciones de orden superior son funciones que resive como parametro otra funcion existen tres funciones que son importantes que son "),(0,o._)("em",{class:"enfasis"},"filter"),(0,o.Uk)(", "),(0,o._)("em",{class:"enfasis"},"map"),(0,o.Uk)(" y "),(0,o._)("em",{class:"enfasis"},"reduce")],-1),l=(0,o._)("h2",null,"filter",-1),i=(0,o._)("p",null,[(0,o.Uk)("como su nombre lo indica realiza un filtro de algun tipo de coleccion, y devuelve un objeto iterador por lo tanto se usa la funcion "),(0,o._)("em",{class:"enfasis"},"list"),(0,o.Uk)(" para convertirlo en una lista")],-1),c=(0,o._)("code",{class:"python"},"my_list=[1,4,5,6,9,13,19,21]\r\n\r\n#usando la funcion filter\r\nodd=list(filter(lambda x: x%2 != 0, my_list))",-1),d=[c],u=(0,o._)("p",null,"como se puede ver la funcion filter tiene dos parametros el primero es una funcion que recibe el dato de una coleccion y el segundo es la coleccion.",-1),p=(0,o._)("h2",null,"map",-1),m=(0,o._)("p",null,"se usa para operar toda la coleccion en este ejemplo se elevara al cuadrado todos los elementos de la coleccion y recibe los mismos argumentos que filter",-1),h=(0,o._)("code",{class:"python"},"my_list=[1,4,5,6,9,13,19,21]\r\n\r\n#usando la funcion map\r\nreised=list(map(lambda x: x**2 != 0, my_list))",-1),f=[h],b=(0,o._)("h2",null,"reduce",-1),_=(0,o._)("p",null,"como su nombre lo indica intenta reduccir la coleccion a un solo elemento para esto se itera el elemento y el siguiente osea la funcion que recibe reduce necesita dos argumentos.",-1),g=(0,o._)("code",{class:"python"},"from functools import reduce\r\n\r\nmy_list=[1,4,5,6,9,13,19,21]\r\n#usando la funcion reduce\r\nall_multiplied=reduce(lambda a,b: a*b, my_list)",-1),v=[g];function y(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,l,i,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,d)),[[n]]),u,p,m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]]),b,_,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,v)),[[n]])])}var w=n(3744);const q={},D=(0,w.Z)(q,[["render",y]]);var j=D},958:function(e,a,n){n.r(a),n.d(a,{default:function(){return D}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Decodadores en python",-1),t=(0,o._)("p",null,"son funciones de orden superior que a√±aden funcionalidades a otras funciones.",-1),l=(0,o._)("p",null,"como ejemplo se tienen dos funciones de suma y resta y se quiere agregar a la funcionalidad un mensaje de inicio y otra al final de la ejecucion. para esto se hace de la siguiente forma.",-1),i=(0,o._)("code",{class:"python"},'@funcion_decoradora\r\ndef suma():\r\n    print(15+20)\r\n\r\ndef resta():\r\n    print(30-10)\r\n\r\ndef funcion_decoradora(funcion_parametro):\r\n    def funcion_interior():\r\n        print("vamos a realizar un calculo: ")\r\n        funcion_parametro()\r\n        print("Hemos terminado el calculo")\r\n    return funcion_interior\r\n\r\nsuma()',-1),c=[i],d=(0,o._)("p",null,[(0,o.Uk)("se debe observar que para indicarle a python que use la funcion decoradora se usa una arroba "),(0,o._)("em",{class:"enfasis"},"@"),(0,o.Uk)(" y se llama a la funcion antes de la funcion que queremos decorrar. en este caso es la funcion suma a la que se le hace la decoracion.")],-1),u=(0,o._)("h2",null,"funciones decoradoras cuando la funcion a decorar reciben parametros",-1),p=(0,o._)("p",null,[(0,o.Uk)("en muchos casos lo que se quiere es decorar funciones que reciben parametros para esto se le debe indicar a las funciones internas que van a recibir argumentos usando el simbolo de multiplicar le indica a python que va a recibir x cantidad de parametros por convencion se usa "),(0,o._)("em",{class:"enfasis"},"*args")],-1),m=(0,o._)("code",{class:"python"},'@funcion_decoradora\r\ndef suma(num1,num2):\r\n    print(num1+num2)\r\n\r\ndef funcion_decoradora(funcion_parametro):\r\n    def funcion_interior(*args):\r\n        print("vamos a realizar un calculo: ")\r\n        funcion_parametro(*args)\r\n        print("Hemos terminado el calculo")\r\n    return funcion_interior\r\n\r\nsuma(5,20)',-1),h=[m],f=(0,o._)("h2",null,"argumentos clave valor",-1),b=(0,o._)("p",null,[(0,o.Uk)("cuando se quiere pasar argumentos de clave valor se usa el doble asterisco para indicar que va a recibir argumentos con clave valor por convencion se usa "),(0,o._)("em",{class:"enfasis"},"**kwargs")],-1),_=(0,o._)("code",{class:"python"},'@funcion_decoradora\r\ndef potencia(base,exponente):\r\n    print(pow(base,exponente))\r\n\r\ndef funcion_decoradora(funcion_parametro):\r\n    def funcion_interior(*args,**kwargs):\r\n        print("vamos a realizar un calculo: ")\r\n        funcion_parametro(*args,**kwargs)\r\n        print("Hemos terminado el calculo")\r\n    return funcion_interior\r\n\r\npotencia(base=5,exponente=3)',-1),g=[_];function v(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,l,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,c)),[[n]]),d,u,p,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,h)),[[n]]),f,b,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,g)),[[n]])])}var y=n(3744);const w={},q=(0,y.Z)(w,[["render",v]]);var D=q},8978:function(e,a,n){n.r(a),n.d(a,{default:function(){return E}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Excepciones en python",-1),t=(0,o._)("h2",null,"Capturar Excepciones",-1),l=(0,o._)("p",null,"las Excepciones ocurren en tiempo de ejecucion. y para lograr capturarlas se usa la sentencia try except",-1),i=(0,o._)("code",{class:"python"},"try:\r\n    pass\r\nexcept nombreExcecion:\r\n    pass",-1),c=[i],d=(0,o._)("p",null,[(0,o.Uk)("Si se quiere capturar el evento del error se tiene que asignar una variable al evento. con la palabra clave "),(0,o._)("em",{class:"enfasis"},"as")],-1),u=(0,o._)("code",{class:"python"},"try:\r\n    pass\r\nexcept nombreExcecion as e:\r\n    pass",-1),p=[u],m=(0,o._)("p",null,"en algunas ocaciones se necesita que se ejecute un trozo de codigo asi hubiese ocurrido una excepcion. como cerrar archivos, cerrar conexiones o liberar recursos.",-1),h=(0,o._)("code",{class:"python"},"try:\r\n    pass\r\nexcept nombreExcecion as e:\r\n    pass\r\nfinally:\r\n    pass",-1),f=[h],b=(0,o._)("h2",null,"Lanzar excepciones",-1),_=(0,o._)("p",null,[(0,o.Uk)("para lanzar una excepcion en python se usa la palabra clave "),(0,o._)("em",{class:"enfasis"},"raise"),(0,o.Uk)(" seguido de un tipo de excepcion en python")],-1),g=(0,o._)("code",{class:"python"},'raise TypeError("mensaje")\r\nraise ZeroDivisionError("mensaje")\r\nraise ValueError("mensaje")',-1),v=[g],y=(0,o._)("h2",null,"Afirmaciones (assert Statements)",-1),w=(0,o._)("p",null,"se puede leer una afirmacion como afirmo que condicion y sino envia el siguiente Error.",-1),q=(0,o._)("code",{class:"python"},'def palindrome(string)\r\n    assert len(string)>0,"No se puede ingresar una cadena vacia"\r\n    return string==string[::-1]',-1),D=[q];function j(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,l,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,c)),[[n]]),d,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,p)),[[n]]),m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]]),b,_,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,v)),[[n]]),y,w,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,D)),[[n]])])}var x=n(3744);const k={},U=(0,x.Z)(k,[["render",j]]);var E=U},1264:function(e,a,n){n.r(a),n.d(a,{default:function(){return z}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>usar archivos externos</h1><h2>Archivos de texto y binarios</h2><p>existen dos tipos de archivos los de texto y los binarios en los de texto podemos encontrar extenciones como <em class="enfasis">.json, .xml, .py, .txt, .css, .js, .csv</em> y en el de los binarios podemos encontrar <em class="enfasis">.png, .mp3, .jpg, .avi, .dll, .mp4</em></p><p>la diferencia son los bits que en los de texto solo representan letras mientras que los binarios los bits pueden representar mas cosas.</p><h2>Archivos de texto</h2><p>existen varios modos de apertura que son:</p><ul><li><em>R</em> Lectura</li><li><em>W</em> escritura (sobreescribiendo)</li><li><em>A</em> agregar contenido.</li></ul><p>aqui se presentan dos formas de abrir la conexion al archivo. la forma antigua de crear una variable para procesar el archivo y la otra usando el manejador contextual <em class="enfasis">with</em> que permite prevenir el da√±o al archivo leido.</p>',8),t=(0,o._)("code",{class:"python"},'archivo=open("rutaArchivo","modo de apertura")',-1),l=[t],i=(0,o._)("code",{class:"python"},'with open("rutaArchivo", "modo de apertura") as f:',-1),c=[i],d=(0,o._)("h3",null,"leer el contenido del archivo",-1),u=(0,o._)("code",{class:"python"},'def read():\r\n    archivo=open("rutaArchivo","r",encoding="UTF-8")\r\n    textoArchivo=archivo.read() #lee todo el archivo y lo guarda en una variable texto\r\n    lineas=archivo.readlines() #lee todo el archivo y lo guarda en una coleccion por linea.\r\n    archivo.close()',-1),p=[u],m=(0,o._)("code",{class:"python"},'def read():\r\n    with open("rutaArchivo","r",encoding="UTF-8") as f:\r\n        for line in f:\r\n            pass',-1),h=[m],f=(0,o._)("div",{class:"importante"},[(0,o._)("em",null,"notas:"),(0,o.Uk)(" se puede modificar el puntero de donde inicia a leer. "),(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("em",null,"archivo.seek(11)"),(0,o.Uk)(" desplaza el cursor al inicio del archivo y se mueve 11 caracteres.")]),(0,o._)("li",null,[(0,o._)("em",null,"archivo.read(11)"),(0,o.Uk)(" lee hasta el caracter 11 del archivo.")])])],-1),b=(0,o._)("h2",null,"Escritura",-1),_=(0,o._)("code",{class:"python"},'def write():\r\n    archivo=open("rutaArchivo","w",encoding="UTF-8")\r\n    #escribe en el archivo lo que se encuentra como parametro.\r\n    archivo.write("lo que se quiere escribir")\r\n    #escribe en una linea cada elemento de la coleccion.\r\n    archivo.writelines(coleccion) \r\n    archivo.close()',-1),g=[_],v=(0,o._)("code",{class:"python"},'def write():\r\n    names=["facundo","Miguel","Pepe","Cristian"]\r\n    with open("rutaArchivo","w",encoding="UTF-8") as f:\r\n        for name in names:\r\n            f.write(name)\r\n            f.write("\\n")',-1),y=[v],w=(0,o._)("h2",null,"Agregar",-1),q=(0,o._)("code",{class:"python"},'def add():\r\n    archivo=open("rutaArchivo","a",encoding="UTF-8")\r\n    #escribe en el archivo lo que se encuentra como parametro.\r\n    archivo.write("lo que se quiere escribir") \r\n    #escribe en una linea cada elemento de la coleccion.\r\n    archivo.writelines(coleccion) \r\n    archivo.close()',-1),D=[q],j=(0,o._)("code",{class:"python"},'def add():\r\n    names=["facundo","Miguel","Pepe","Cristian"]\r\n    with open("rutaArchivo","a",encoding="UTF-8") as f:\r\n        for name in names:\r\n            f.write(name)\r\n            f.write("\\n")',-1),x=[j];function k(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,l)),[[n]]),(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,c)),[[n]]),d,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,p)),[[n]]),(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,h)),[[n]]),f,b,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,g)),[[n]]),(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,y)),[[n]]),w,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,D)),[[n]]),(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,x)),[[n]])])}var U=n(3744);const E={},C=(0,U.Z)(E,[["render",k]]);var z=C},1928:function(e,a,n){n.r(a),n.d(a,{default:function(){return q}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Iterables",-1),t=(0,o._)("p",null,"En Python, un iterable es un objeto que se puede utilizar en un bucle definido. Si un objeto es iterable significa que se puede pasar como argumento a la funci√≥n iter. El iterable que se pasa como par√°metro a la funci√≥n iter regresa un iterator.",-1),l=(0,o._)("code",{class:"python"},"iter('cadena') # cadena\r\niter(['a', 'b', 'c']) # lista\r\niter(('a', 'b', 'c')) # tupla\r\niter({'a', 'b', 'c'}) # conjunto\r\niter({'a': 1, 'b': 2, 'c': 3}) # diccionario",-1),i=[l],c=(0,o._)("p",null,"Todas las llamadas anteriores regresan un objeto de tipo iterator.",-1),d=(0,o._)("h2",null,"¬øQu√© pasa si le pasamos a la funci√≥n iter un objeto que no es iterable?",-1),u=(0,o._)("p",null,"Obtendremos un TypeError que se√±ala que el objeto no es un iterable. Esto es un ejemplo de programaci√≥n defensiva en el que Python verifica el tipo del objeto antes de proceder al c√≥mputo.",-1),p=(0,o._)("p",null,"Es importante se√±alar que estos no son los √∫nicos tipos de objetos que pueden ser iterable. Existen gran cantidad de ejemplos en la librer√≠a est√°ndar y, de hecho, casi cualquier objeto se puede convertir en un iterable.",-1),m=(0,o._)("h2",null,"Iterators",-1),h=(0,o._)("p",null,"Ahora que ya sabemos c√≥mo obtener un iterator, ¬øQu√© podemos hacer con √©l? Un iterator es un objeto que regresa sucesivamente los valores asociados con el iterable.",-1),f=(0,o._)("code",{class:"python"},"frutas = ['manzana', 'pera', 'mango']\r\niterador = iter(frutas)\r\nnext(iterador)",-1),b=[f],_=(0,o._)("p",null,"Como puedes ver, el iterator guarda el estado interno de la iteraci√≥n, de tal manera que cada llamada sucesiva a next regresa el siguiente elemento. ¬øQu√© pasa una vez que ya no existan m√°s elementos en el iterable? La llamada a next arrojar√° un error de tipo StopIteration.",-1);function g(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,d,u,p,m,h,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,b)),[[n]]),_])}var v=n(3744);const y={},w=(0,v.Z)(y,[["render",g]]);var q=w},8108:function(e,a,n){n.r(a),n.d(a,{default:function(){return Z}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Documentacion en python",-1),t=(0,o._)("p",null,'para poder documentar nuestras clases, modulos, funciones, etc se usa la triple comilla doble, dentro de la "clase".',-1),l=(0,o._)("code",{class:"python"},'class nombreClase:\r\n    """\r\n        esta clase es capas de hacer muchas cosas\r\n    """\r\n\r\n    def funcion():\r\n        """\r\n            esta funcion pertenece a la clase nombre\r\n        """',-1),i=[l],c=(0,o._)("p",null,[(0,o.Uk)("para poder ver la documentacion se puede usar la funcion "),(0,o._)("em",{class:"enfasis"},"help"),(0,o.Uk)(" o la propiedad "),(0,o._)("em",{class:"enfasis"},"__doc__")],-1),d=(0,o._)("code",{class:"python"},"help(funcion)\r\nprint(funcion.__doc__)",-1),u=[d],p=(0,o._)("p",null,"cuando se quiere acceder a la documentacion de una funcion interna de la clase se debe nombrar la clase la notacion punto y la funcion",-1),m=(0,o._)("code",{class:"python"},"help(clase.funcion)\r\nhelp(clase)",-1),h=[m],f=(0,o._)("h2",null,"Pruebas usando la documentacion",-1),b=(0,o._)("p",null,[(0,o.Uk)("para poder usar la documentacion para hacer pruebas se debe usar el modulo "),(0,o._)("em",{class:"enfasis"},"doctest"),(0,o.Uk)(". ")],-1),_=(0,o._)("p",null,[(0,o.Uk)("para poder especificar que es lo que se ejecuta en consola se usa "),(0,o._)("em",{class:"enfasis"},">>>"),(0,o.Uk)(" y la respuesta se coloca tal cual se devuelve en python")],-1),g=(0,o._)("code",{class:"python"},'def areaTriangulo(base,altura):\r\n    """\r\n    Calcula el area de un triangulo dado\r\n    >>>areaTriangulo(3,6)\r\n    9.0\r\n\r\n    Calcula el area de un triangulo dado\r\n    >>>areaTriangulo(4,5)\r\n    9.0\r\n\r\n    """\r\n    return (base*altura)/2',-1),v=[g],y=(0,o._)("p",null,"para poder evaluar las pruebas que tenemos en la documentacion se usaria el siguiente comando. si todas las pruebas funcionan correctamente no se mostrara nada en pantalla si alguna falla mostrara el error lo que se espera y lo que arrojo la prueba.",-1),w=(0,o._)("code",{class:"python"},"import doctest\r\ndoctest.testmod()",-1),q=[w],D=(0,o._)("h2",null,"pruebas con mas de una linea de codigo",-1),j=(0,o._)("p",null,[(0,o.Uk)("para poder simular bloques de codigo se debe anclar las lineas que componen el bloque de codigo con tres puntos "),(0,o._)("em",{class:"enfasis"},"..."),(0,o.Uk)(" y cada linea que es independiente con "),(0,o._)("em",{class:"enfasis"},">>>")],-1),x=(0,o._)("code",{class:"python"},'import math\r\n\r\n"""\r\n>>>lista=[]\r\n>>>for i in [4,9,16]:\r\n...lista.append(i)\r\n>>> raizCuadrada(lista)\r\n[2.0,3.0,4.0]\r\n"""\r\n\r\ndef raizCuadrada(listaNumeros):\r\n    return[math.sqrt(n) for n in listaNumeros]',-1),k=[x],U=(0,o._)("h2",null,"pruebas que se consideran un error",-1),E=(0,o._)("p",null,[(0,o.Uk)("se debe copiar el error esperado tal cual lo devolveria python en los datos esperados, para simplificar esto se puede usar los tres puntos "),(0,o._)("em",{class:"enfasis"},"..."),(0,o.Uk)(" esto le indicara a python que hay texto es como un comodin")],-1),C=(0,o._)("code",{class:"python"},'"""\r\n>>>lista=[]\r\n>>>for i in [4,-9,16]:\r\n...lista.append(i)\r\n>>> raizCuadrada(lista)\r\nTraceback (most recent call last):\r\n    ...\r\nValueError: math domain error\r\n"""',-1),z=[C];function P(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,i)),[[n]]),c,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,u)),[[n]]),p,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,h)),[[n]]),f,b,_,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,v)),[[n]]),y,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,q)),[[n]]),D,j,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,k)),[[n]]),U,E,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,z)),[[n]])])}var S=n(3744);const A={},T=(0,S.Z)(A,[["render",P]]);var Z=T},8696:function(e,a,n){n.r(a),n.d(a,{default:function(){return q}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"Pruebas y debugging",-1),t=(0,o._)("h2",null,"Pruebas de caja negra",-1),l=(0,o._)("p",null,"lo que se hace en este tipo de pruebas es que se ingresan algunas entradas y se valida la salida con la salida esperada si la entrada y la salida son iguales se considera que paso la prueba. sin importar que haga internamente.",-1),i=(0,o._)("p",null,[(0,o.Uk)("en esta categoria estan "),(0,o._)("em",{class:"enfasis"},"Unit testing"),(0,o.Uk)(" y "),(0,o._)("em",{class:"enfasis"},"integration testing")],-1),c=(0,o._)("code",{class:"python"},"import unittest\r\n\r\nclass CajaNegraTest(unittest.TestCase):\r\n\r\n    def test_suma_dos_porsitivos(self):\r\n        num_1=10\r\n        num_2=5\r\n        resultado suma(num_1,num_2)\r\n        self.assertEqual(resultado,15)\r\n\r\ndef suma(num_1,num_2):\r\n    return num_1+num2\r\n\r\nif __name__=='__main__':\r\n    unittest.main()",-1),d=[c],u=(0,o._)("h2",null,"Pruebas de caja de cristal",-1),p=(0,o._)("p",null,[(0,o.Uk)("se basan en el flujo del programa, haciendo prueba de todos los caminos posibles de una funcion. ramificaciones, bucles for y while, recursion. y en este tipo de pruebas estan "),(0,o._)("em",{class:"enfasis"},"Regression testing"),(0,o.Uk)(" o "),(0,o._)("em",{class:"enfasis"},"mocks")],-1),m=(0,o._)("code",{class:"python"},"import unittest\r\n\r\ndef es_mayor_de_edad(edad):\r\n    if edad >=18:\r\n        return true\r\n    else:\r\n        return false\r\n\r\n\r\nclass CajaNegraTest(unittest.TestCase):\r\n\r\n    def test_es_mayor_de_edad(self):\r\n        edad=20\r\n        resultado=es_mayor_de_edad(edad)\r\n        self.assertEqual(resultado,true)\r\n    \r\n    def test_es_menor_de_edad(self):\r\n        edad=15\r\n        resultado=es_mayor_de_edad(edad)\r\n        self.assertEqual(resultado,false)\r\n\r\nif __name__=='__main__':\r\n    unittest.main()",-1),h=[m],f=(0,o._)("h2",null,"Debugging",-1),b=(0,o._)("p",null,null,-1),_=(0,o._)("ul",null,[(0,o._)("li",null,"Encuentra a los sopechosos comunes"),(0,o._)("li",null,"En lugar de preguntarte por que un programa no funciona, preguntate por que esta funcionando de esta manera."),(0,o._)("li",null,"Es posible que el bug no se encuentre donde crees que est√°: has busqueda binaria"),(0,o._)("li",null,"Explicale el problema a otra persona. De preferencia que no tenga contexto. la prueba del pato."),(0,o._)("li",null,"Lleva un registro de lo que has tratado, preferentemente en la forma de tests."),(0,o._)("li",null,"vete a dormir.")],-1);function g(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,t,l,i,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,d)),[[n]]),u,p,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,h)),[[n]]),f,b,_])}var v=n(3744);const y={},w=(0,v.Z)(y,[["render",g]]);var q=w},2765:function(e,a,n){n.r(a),n.d(a,{default:function(){return W}});var o=n(6252);const r={id:"cuerpo"},s=(0,o.uE)('<h1>Programacion orientada a objetos</h1><h2>Clases</h2><p>para crear una clase se usa la palabra clave <em class="enfasis">class</em> y para instanciar la clase se usa una variable que use algun constructor de la misma.</p><p>los constructores de la clase se crean usando la palabra clave <em class="enfasis">__init__</em> y en cada funcion o metodo de la clase debe recibir la palabra clave <em class="enfasis">self</em> que hace referencia a si mismo es igual que <em class="enfasis">this</em> en otros lenguajes. </p>',4),t=(0,o._)("code",{class:"python"},"class Hotel:\r\n    def __init__(self):\r\n        pass\r\n    def __init__(self,numero_cuartos):\r\n        pass\r\n    def __init__(selft,numero_cuartos,numero_pisos):\r\n        pass\r\n\r\nhotel=Hotel(15)",-1),l=[t],i=(0,o._)("h2",null,"modificador de acceso y propiedades",-1),c=(0,o._)("p",null,[(0,o.Uk)("en python podemos cambiar el acceso a privado usando un guion bajo o doble guion bajo"),(0,o._)("em",{class:"enfasis"},"_"),(0,o.Uk)(" o "),(0,o._)("em",{class:"enfasis"},"__"),(0,o.Uk)(" antes de la propiedad o metodo.")],-1),d=(0,o._)("code",{class:"python"},"class nombreclase:\r\n\r\n    def __init__(self,privado,publico):\r\n        self._privado=privado\r\n        self.publico=publico\r\n\r\n    def _metodoPrivado(self):\r\n        pass\r\n    def metodoPublico(self):\r\n        pass",-1),u=[d],p=(0,o._)("h2",null,"Getter y setter",-1),m=(0,o._)("p",null,"permite establecer o obtener las propiedades privadas de una clase.",-1),h=(0,o._)("code",{class:"python"},"class Auto:\r\n\r\n    def __init__(self,matricula):\r\n        self._matricula=matricula\r\n\r\n    #getter\r\n    def getMatricula(self):\r\n        return self._matricula\r\n\r\n    #setter    \r\n    def metodoPublico(self,matricula):\r\n        self._matricula=matricula",-1),f=[h],b=(0,o.uE)('<h2>funcion decoradora @property</h2><p>se puede usar la funcion <em class="enfasis">property</em> para indicar cuales seran las funciones que usara para el getter, el setter, y eliminar un atributo de una clase incluso se puede documentar. <em class="enfasis">property(fget,fset,fdel,fdoc)</em></p><ul><li><em>fget: </em> recibe la funcion del getter</li><li><em>fset: </em> recibe la funcion del setter</li><li><em>fdel: </em> recibe la funcion de delete</li><li><em>fdoc: </em> recibe un docstring</li></ul>',3),_=(0,o._)("code",{class:"python"},'class Millas:\r\n    def __init__(self):\r\n        self._distancia = 0\r\n    \r\n    # Funci√≥n para obtener el valor de _distancia\r\n    def obtener_distancia(self):\r\n        print("Llamada al m√©todo getter")\r\n        return self._distancia\r\n    \r\n    # Funci√≥n para definir el valor de _distancia\r\n    def definir_distancia(self, recorrido):\r\n        print("Llamada al m√©todo setter")\r\n        self._distancia = recorrido\r\n    \r\n    # Funci√≥n para eliminar el atributo _distancia\r\n    def eliminar_distancia(self):\r\n        del self._distancia\r\n    \r\n    distancia = property(obtener_distancia, definir_distancia, eliminar_distancia)',-1),g=[_],v=(0,o._)("p",null,[(0,o.Uk)("el decorador "),(0,o._)("em",{class:"enfasis"},"@property"),(0,o.Uk)(" facilita el trabajo con propiedades privadas haciendo que se trate las funciones getter y setter como propiedades.")],-1),y=(0,o._)("code",{class:"python"},"#funcion getter\r\n@property\r\ndef password(self):\r\n    return self._password\r\n\r\n#funcion setter\r\n@password.setter\r\ndef password(self,valor):\r\n    self._password=valor\r\n        ",-1),w=(0,o.Uk)("\r\n    "),q=[y,w],D=(0,o._)("h2",null,"Metodos estaticos",-1),j=(0,o._)("p",null,"los metodos estaticos le pertenecen a la clase y no a la instancia",-1),x=(0,o._)("code",{class:"python"},"class Math:\r\n    @staticmethod\r\n    def pi():\r\n        return 3.1416\r\n    \r\nprint(Math.pi())",-1),k=[x],U=(0,o._)("h2",null,"Herencia",-1),E=(0,o._)("p",null,"Cuando una clase hereda de otra, adquiere los atributos y metodos de la primera. La clase original se llama clase padre(SuperClase) y la nueva clase es la clase hija(subClase). la clase hijo puede herredar cualquier o todos los atributos y metodos de su clase padre, pero tambien es libre de definir nuevos atributos y metodos propios.",-1),C=(0,o._)("p",null,[(0,o.Uk)("para poder usar los metodos y propiedades de la superClase se usa la palabra clave "),(0,o._)("em",{class:"enfasis"},"super()")],-1),z=(0,o._)("code",{class:"python"},"class SuperClase:\r\n    def __init__(self):\r\n        pass\r\n\r\nclass subClase(superClase):\r\n    def __init__(self):\r\n        super().__init__(self)",-1),P=[z],S=(0,o._)("h3",null,"Herencia Multiple",-1),A=(0,o._)("p",null,"en python se puede heredar de varias clases padre pero el constructor que hereda es del primera clase de que hereda.",-1),T=(0,o._)("code",{class:"python"},"\r\n            class SuperClase_a:\r\n                def __init__(self):\r\n                    pass\r\n            class SuperClase_b:\r\n                def __init__(self):\r\n                    pass\r\n            class subClase(superClase_a,superClase_b):\r\n                def __init__(self):\r\n                    super().__init__(self)",-1),Z=[T],N=(0,o._)("h2",null,"Polimorfirmo",-1),O=(0,o._)("p",null,"se trata de cambiar el comportamiento de un metodo heredado para hacerlo mas especifico a la clase que hereda.",-1),F=(0,o._)("code",{class:"python"},"class persona:\r\n    def __init__(self,nombre):\r\n        self.nombre=nombre\r\n    def avanza(self):\r\n        print('Ando caminando')\r\n\r\nclass ciclista(persona):\r\n    def __init__(self,nombre)\r\n        super().__init__(nombre)\r\n    def avanza(self):\r\n        print('ando moviendome en mi bicicleta')",-1),Q=[F],L=(0,o._)("div",{class:"importante"},[(0,o._)("em",null,"Nota: "),(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("em",null,"Herencia:"),(0,o.Uk)(" copy paste")]),(0,o._)("li",null,[(0,o._)("em",null,"Polimorfirmo:"),(0,o.Uk)(" copy paste edit")])])],-1),M=(0,o._)("h2",null,"isinstance()",-1),I=(0,o._)("p",null,"nos permite saber si un objeto es una instancia de una clase especifica devuelve true o false.",-1),H=(0,o._)("code",{class:"python"},"class persona:\r\n    def __init__(self,nombre):\r\n        self.nombre=nombre\r\n    def avanza(self):\r\n        print('Ando caminando')\r\n\r\nruben=persona(\"ruben\")\r\n\r\nprint(isinstance(ruben,persona))",-1),B=[H];function R(e,a){const n=(0,o.Q2)("highlightjs");return(0,o.wg)(),(0,o.iD)("div",r,[s,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,l)),[[n]]),i,c,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,u)),[[n]]),p,m,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,f)),[[n]]),b,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,g)),[[n]]),v,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,q)),[[n]]),D,j,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,k)),[[n]]),U,E,C,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,P)),[[n]]),S,A,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,Z)),[[n]]),N,O,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,Q)),[[n]]),L,M,I,(0,o.wy)(((0,o.wg)(),(0,o.iD)("pre",null,B)),[[n]])])}var V=n(3744);const J={},G=(0,V.Z)(J,[["render",R]]);var W=G},7829:function(e,a,n){n.r(a),n.d(a,{default:function(){return p}});var o=n(6252);const r={id:"cuerpo"},s=(0,o._)("h1",null,"pagina interesante para programar en python",-1),t=(0,o._)("dl",{class:"diccionario"},[(0,o._)("dt",null,[(0,o._)("a",{href:"https://docs.python.org/es/3/",target:"back"},"Documentacion:")]),(0,o._)("dd",null,"documentacion de python"),(0,o._)("dt",null,[(0,o._)("a",{href:"https://www.tutorialspoint.com/python/tk_text.htm",target:"back"},"modulo tk:")]),(0,o._)("dd",null,"documentacion para usar tkinter interface grafica"),(0,o._)("dt",null,[(0,o._)("a",{href:"https://enriquelazcorreta.gitbooks.io/tkinter/content/",target:"back"},"modulo tkinter")]),(0,o._)("dd",null,"mas informacion del modulo tkinter")],-1),l=[s,t];function i(e,a){return(0,o.wg)(),(0,o.iD)("div",r,l)}var c=n(3744);const d={},u=(0,c.Z)(d,[["render",i]]);var p=u}}]);
//# sourceMappingURL=about.9f33587e.js.map